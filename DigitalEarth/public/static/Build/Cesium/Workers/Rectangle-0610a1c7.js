/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.96
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
define(["exports","./Matrix4-d3db9505","./Check-436535f3","./defined-b681f02d","./Math-5b6faca9"],(function(t,e,a,i,n){"use strict";function r(t,a,r,o){a=i.defaultValue(a,0),r=i.defaultValue(r,0),o=i.defaultValue(o,0),t._radii=new e.Cartesian3(a,r,o),t._radiiSquared=new e.Cartesian3(a*a,r*r,o*o),t._radiiToTheFourth=new e.Cartesian3(a*a*a*a,r*r*r*r,o*o*o*o),t._oneOverRadii=new e.Cartesian3(0===a?0:1/a,0===r?0:1/r,0===o?0:1/o),t._oneOverRadiiSquared=new e.Cartesian3(0===a?0:1/(a*a),0===r?0:1/(r*r),0===o?0:1/(o*o)),t._minimumRadius=Math.min(a,r,o),t._maximumRadius=Math.max(a,r,o),t._centerToleranceSquared=n.CesiumMath.EPSILON1,0!==t._radiiSquared.z&&(t._squaredXOverSquaredZ=t._radiiSquared.x/t._radiiSquared.z)}function o(t,e,a){this._radii=void 0,this._radiiSquared=void 0,this._radiiToTheFourth=void 0,this._oneOverRadii=void 0,this._oneOverRadiiSquared=void 0,this._minimumRadius=void 0,this._maximumRadius=void 0,this._centerToleranceSquared=void 0,this._squaredXOverSquaredZ=void 0,r(this,t,e,a)}Object.defineProperties(o.prototype,{radii:{get:function(){return this._radii}},radiiSquared:{get:function(){return this._radiiSquared}},radiiToTheFourth:{get:function(){return this._radiiToTheFourth}},oneOverRadii:{get:function(){return this._oneOverRadii}},oneOverRadiiSquared:{get:function(){return this._oneOverRadiiSquared}},minimumRadius:{get:function(){return this._minimumRadius}},maximumRadius:{get:function(){return this._maximumRadius}}}),o.clone=function(t,a){if(!i.defined(t))return;const n=t._radii;return i.defined(a)?(e.Cartesian3.clone(n,a._radii),e.Cartesian3.clone(t._radiiSquared,a._radiiSquared),e.Cartesian3.clone(t._radiiToTheFourth,a._radiiToTheFourth),e.Cartesian3.clone(t._oneOverRadii,a._oneOverRadii),e.Cartesian3.clone(t._oneOverRadiiSquared,a._oneOverRadiiSquared),a._minimumRadius=t._minimumRadius,a._maximumRadius=t._maximumRadius,a._centerToleranceSquared=t._centerToleranceSquared,a):new o(n.x,n.y,n.z)},o.fromCartesian3=function(t,e){return i.defined(e)||(e=new o),i.defined(t)?(r(e,t.x,t.y,t.z),e):e},o.WGS84=Object.freeze(new o(6378137,6378137,6356752.314245179)),o.UNIT_SPHERE=Object.freeze(new o(1,1,1)),o.MOON=Object.freeze(new o(n.CesiumMath.LUNAR_RADIUS,n.CesiumMath.LUNAR_RADIUS,n.CesiumMath.LUNAR_RADIUS)),o.prototype.clone=function(t){return o.clone(this,t)},o.packedLength=e.Cartesian3.packedLength,o.pack=function(t,a,n){return n=i.defaultValue(n,0),e.Cartesian3.pack(t._radii,a,n),a},o.unpack=function(t,a,n){a=i.defaultValue(a,0);const r=e.Cartesian3.unpack(t,a);return o.fromCartesian3(r,n)},o.prototype.geocentricSurfaceNormal=e.Cartesian3.normalize,o.prototype.geodeticSurfaceNormalCartographic=function(t,a){const n=t.longitude,r=t.latitude,o=Math.cos(r),u=o*Math.cos(n),s=o*Math.sin(n),h=Math.sin(r);return i.defined(a)||(a=new e.Cartesian3),a.x=u,a.y=s,a.z=h,e.Cartesian3.normalize(a,a)},o.prototype.geodeticSurfaceNormal=function(t,a){if(!e.Cartesian3.equalsEpsilon(t,e.Cartesian3.ZERO,n.CesiumMath.EPSILON14))return i.defined(a)||(a=new e.Cartesian3),a=e.Cartesian3.multiplyComponents(t,this._oneOverRadiiSquared,a),e.Cartesian3.normalize(a,a)};const u=new e.Cartesian3,s=new e.Cartesian3;o.prototype.cartographicToCartesian=function(t,a){const n=u,r=s;this.geodeticSurfaceNormalCartographic(t,n),e.Cartesian3.multiplyComponents(this._radiiSquared,n,r);const o=Math.sqrt(e.Cartesian3.dot(n,r));return e.Cartesian3.divideByScalar(r,o,r),e.Cartesian3.multiplyByScalar(n,t.height,n),i.defined(a)||(a=new e.Cartesian3),e.Cartesian3.add(r,n,a)},o.prototype.cartographicArrayToCartesianArray=function(t,e){const a=t.length;i.defined(e)?e.length=a:e=new Array(a);for(let i=0;i<a;i++)e[i]=this.cartographicToCartesian(t[i],e[i]);return e};const h=new e.Cartesian3,d=new e.Cartesian3,c=new e.Cartesian3;o.prototype.cartesianToCartographic=function(t,a){const r=this.scaleToGeodeticSurface(t,d);if(!i.defined(r))return;const o=this.geodeticSurfaceNormal(r,h),u=e.Cartesian3.subtract(t,r,c),s=Math.atan2(o.y,o.x),l=Math.asin(o.z),f=n.CesiumMath.sign(e.Cartesian3.dot(u,t))*e.Cartesian3.magnitude(u);return i.defined(a)?(a.longitude=s,a.latitude=l,a.height=f,a):new e.Cartographic(s,l,f)},o.prototype.cartesianArrayToCartographicArray=function(t,e){const a=t.length;i.defined(e)?e.length=a:e=new Array(a);for(let i=0;i<a;++i)e[i]=this.cartesianToCartographic(t[i],e[i]);return e},o.prototype.scaleToGeodeticSurface=function(t,a){return e.scaleToGeodeticSurface(t,this._oneOverRadii,this._oneOverRadiiSquared,this._centerToleranceSquared,a)},o.prototype.scaleToGeocentricSurface=function(t,a){i.defined(a)||(a=new e.Cartesian3);const n=t.x,r=t.y,o=t.z,u=this._oneOverRadiiSquared,s=1/Math.sqrt(n*n*u.x+r*r*u.y+o*o*u.z);return e.Cartesian3.multiplyByScalar(t,s,a)},o.prototype.transformPositionToScaledSpace=function(t,a){return i.defined(a)||(a=new e.Cartesian3),e.Cartesian3.multiplyComponents(t,this._oneOverRadii,a)},o.prototype.transformPositionFromScaledSpace=function(t,a){return i.defined(a)||(a=new e.Cartesian3),e.Cartesian3.multiplyComponents(t,this._radii,a)},o.prototype.equals=function(t){return this===t||i.defined(t)&&e.Cartesian3.equals(this._radii,t._radii)},o.prototype.toString=function(){return this._radii.toString()},o.prototype.getSurfaceNormalIntersectionWithZAxis=function(t,a,n){a=i.defaultValue(a,0);const r=this._squaredXOverSquaredZ;if(i.defined(n)||(n=new e.Cartesian3),n.x=0,n.y=0,n.z=t.z*(1-r),!(Math.abs(n.z)>=this._radii.z-a))return n};const l=[.14887433898163,.43339539412925,.67940956829902,.86506336668898,.97390652851717,0],f=[.29552422471475,.26926671930999,.21908636251598,.14945134915058,.066671344308684,0];function m(t,e,a){const i=.5*(e+t),n=.5*(e-t);let r=0;for(let t=0;t<5;t++){const e=n*l[t];r+=f[t]*(a(i+e)+a(i-e))}return r*=n,r}function C(t,e,a,n){this.west=i.defaultValue(t,0),this.south=i.defaultValue(e,0),this.east=i.defaultValue(a,0),this.north=i.defaultValue(n,0)}o.prototype.surfaceArea=function(t){const e=t.west;let a=t.east;const i=t.south,r=t.north;for(;a<e;)a+=n.CesiumMath.TWO_PI;const o=this._radiiSquared,u=o.x,s=o.y,h=o.z,d=u*s;return m(i,r,(function(t){const i=Math.cos(t),n=Math.sin(t);return Math.cos(t)*m(e,a,(function(t){const e=Math.cos(t),a=Math.sin(t);return Math.sqrt(d*n*n+h*(s*e*e+u*a*a)*i*i)}))}))},Object.defineProperties(C.prototype,{width:{get:function(){return C.computeWidth(this)}},height:{get:function(){return C.computeHeight(this)}}}),C.packedLength=4,C.pack=function(t,e,a){return a=i.defaultValue(a,0),e[a++]=t.west,e[a++]=t.south,e[a++]=t.east,e[a]=t.north,e},C.unpack=function(t,e,a){return e=i.defaultValue(e,0),i.defined(a)||(a=new C),a.west=t[e++],a.south=t[e++],a.east=t[e++],a.north=t[e],a},C.computeWidth=function(t){let e=t.east;const a=t.west;return e<a&&(e+=n.CesiumMath.TWO_PI),e-a},C.computeHeight=function(t){return t.north-t.south},C.fromDegrees=function(t,e,a,r,o){return t=n.CesiumMath.toRadians(i.defaultValue(t,0)),e=n.CesiumMath.toRadians(i.defaultValue(e,0)),a=n.CesiumMath.toRadians(i.defaultValue(a,0)),r=n.CesiumMath.toRadians(i.defaultValue(r,0)),i.defined(o)?(o.west=t,o.south=e,o.east=a,o.north=r,o):new C(t,e,a,r)},C.fromRadians=function(t,e,a,n,r){return i.defined(r)?(r.west=i.defaultValue(t,0),r.south=i.defaultValue(e,0),r.east=i.defaultValue(a,0),r.north=i.defaultValue(n,0),r):new C(t,e,a,n)},C.fromCartographicArray=function(t,e){let a=Number.MAX_VALUE,r=-Number.MAX_VALUE,o=Number.MAX_VALUE,u=-Number.MAX_VALUE,s=Number.MAX_VALUE,h=-Number.MAX_VALUE;for(let e=0,i=t.length;e<i;e++){const i=t[e];a=Math.min(a,i.longitude),r=Math.max(r,i.longitude),s=Math.min(s,i.latitude),h=Math.max(h,i.latitude);const d=i.longitude>=0?i.longitude:i.longitude+n.CesiumMath.TWO_PI;o=Math.min(o,d),u=Math.max(u,d)}return r-a>u-o&&(a=o,r=u,r>n.CesiumMath.PI&&(r-=n.CesiumMath.TWO_PI),a>n.CesiumMath.PI&&(a-=n.CesiumMath.TWO_PI)),i.defined(e)?(e.west=a,e.south=s,e.east=r,e.north=h,e):new C(a,s,r,h)},C.fromCartesianArray=function(t,e,a){e=i.defaultValue(e,o.WGS84);let r=Number.MAX_VALUE,u=-Number.MAX_VALUE,s=Number.MAX_VALUE,h=-Number.MAX_VALUE,d=Number.MAX_VALUE,c=-Number.MAX_VALUE;for(let a=0,i=t.length;a<i;a++){const i=e.cartesianToCartographic(t[a]);r=Math.min(r,i.longitude),u=Math.max(u,i.longitude),d=Math.min(d,i.latitude),c=Math.max(c,i.latitude);const o=i.longitude>=0?i.longitude:i.longitude+n.CesiumMath.TWO_PI;s=Math.min(s,o),h=Math.max(h,o)}return u-r>h-s&&(r=s,u=h,u>n.CesiumMath.PI&&(u-=n.CesiumMath.TWO_PI),r>n.CesiumMath.PI&&(r-=n.CesiumMath.TWO_PI)),i.defined(a)?(a.west=r,a.south=d,a.east=u,a.north=c,a):new C(r,d,u,c)},C.clone=function(t,e){if(i.defined(t))return i.defined(e)?(e.west=t.west,e.south=t.south,e.east=t.east,e.north=t.north,e):new C(t.west,t.south,t.east,t.north)},C.equalsEpsilon=function(t,e,a){return a=i.defaultValue(a,0),t===e||i.defined(t)&&i.defined(e)&&Math.abs(t.west-e.west)<=a&&Math.abs(t.south-e.south)<=a&&Math.abs(t.east-e.east)<=a&&Math.abs(t.north-e.north)<=a},C.prototype.clone=function(t){return C.clone(this,t)},C.prototype.equals=function(t){return C.equals(this,t)},C.equals=function(t,e){return t===e||i.defined(t)&&i.defined(e)&&t.west===e.west&&t.south===e.south&&t.east===e.east&&t.north===e.north},C.prototype.equalsEpsilon=function(t,e){return C.equalsEpsilon(this,t,e)},C.validate=function(t){},C.southwest=function(t,a){return i.defined(a)?(a.longitude=t.west,a.latitude=t.south,a.height=0,a):new e.Cartographic(t.west,t.south)},C.northwest=function(t,a){return i.defined(a)?(a.longitude=t.west,a.latitude=t.north,a.height=0,a):new e.Cartographic(t.west,t.north)},C.northeast=function(t,a){return i.defined(a)?(a.longitude=t.east,a.latitude=t.north,a.height=0,a):new e.Cartographic(t.east,t.north)},C.southeast=function(t,a){return i.defined(a)?(a.longitude=t.east,a.latitude=t.south,a.height=0,a):new e.Cartographic(t.east,t.south)},C.center=function(t,a){let r=t.east;const o=t.west;r<o&&(r+=n.CesiumMath.TWO_PI);const u=n.CesiumMath.negativePiToPi(.5*(o+r)),s=.5*(t.south+t.north);return i.defined(a)?(a.longitude=u,a.latitude=s,a.height=0,a):new e.Cartographic(u,s)},C.intersection=function(t,e,a){let r=t.east,o=t.west,u=e.east,s=e.west;r<o&&u>0?r+=n.CesiumMath.TWO_PI:u<s&&r>0&&(u+=n.CesiumMath.TWO_PI),r<o&&s<0?s+=n.CesiumMath.TWO_PI:u<s&&o<0&&(o+=n.CesiumMath.TWO_PI);const h=n.CesiumMath.negativePiToPi(Math.max(o,s)),d=n.CesiumMath.negativePiToPi(Math.min(r,u));if((t.west<t.east||e.west<e.east)&&d<=h)return;const c=Math.max(t.south,e.south),l=Math.min(t.north,e.north);return c>=l?void 0:i.defined(a)?(a.west=h,a.south=c,a.east=d,a.north=l,a):new C(h,c,d,l)},C.simpleIntersection=function(t,e,a){const n=Math.max(t.west,e.west),r=Math.max(t.south,e.south),o=Math.min(t.east,e.east),u=Math.min(t.north,e.north);if(!(r>=u||n>=o))return i.defined(a)?(a.west=n,a.south=r,a.east=o,a.north=u,a):new C(n,r,o,u)},C.union=function(t,e,a){i.defined(a)||(a=new C);let r=t.east,o=t.west,u=e.east,s=e.west;r<o&&u>0?r+=n.CesiumMath.TWO_PI:u<s&&r>0&&(u+=n.CesiumMath.TWO_PI),r<o&&s<0?s+=n.CesiumMath.TWO_PI:u<s&&o<0&&(o+=n.CesiumMath.TWO_PI);const h=n.CesiumMath.negativePiToPi(Math.min(o,s)),d=n.CesiumMath.negativePiToPi(Math.max(r,u));return a.west=h,a.south=Math.min(t.south,e.south),a.east=d,a.north=Math.max(t.north,e.north),a},C.expand=function(t,e,a){return i.defined(a)||(a=new C),a.west=Math.min(t.west,e.longitude),a.south=Math.min(t.south,e.latitude),a.east=Math.max(t.east,e.longitude),a.north=Math.max(t.north,e.latitude),a},C.contains=function(t,e){let a=e.longitude;const i=e.latitude,r=t.west;let o=t.east;return o<r&&(o+=n.CesiumMath.TWO_PI,a<0&&(a+=n.CesiumMath.TWO_PI)),(a>r||n.CesiumMath.equalsEpsilon(a,r,n.CesiumMath.EPSILON14))&&(a<o||n.CesiumMath.equalsEpsilon(a,o,n.CesiumMath.EPSILON14))&&i>=t.south&&i<=t.north};const M=new e.Cartographic;C.subsample=function(t,e,a,r){e=i.defaultValue(e,o.WGS84),a=i.defaultValue(a,0),i.defined(r)||(r=[]);let u=0;const s=t.north,h=t.south,d=t.east,c=t.west,l=M;l.height=a,l.longitude=c,l.latitude=s,r[u]=e.cartographicToCartesian(l,r[u]),u++,l.longitude=d,r[u]=e.cartographicToCartesian(l,r[u]),u++,l.latitude=h,r[u]=e.cartographicToCartesian(l,r[u]),u++,l.longitude=c,r[u]=e.cartographicToCartesian(l,r[u]),u++,l.latitude=s<0?s:h>0?h:0;for(let a=1;a<8;++a)l.longitude=-Math.PI+a*n.CesiumMath.PI_OVER_TWO,C.contains(t,l)&&(r[u]=e.cartographicToCartesian(l,r[u]),u++);return 0===l.latitude&&(l.longitude=c,r[u]=e.cartographicToCartesian(l,r[u]),u++,l.longitude=d,r[u]=e.cartographicToCartesian(l,r[u]),u++),r.length=u,r},C.subsection=function(t,e,a,r,o,u){if(i.defined(u)||(u=new C),t.west<=t.east){const a=t.east-t.west;u.west=t.west+e*a,u.east=t.west+r*a}else{const a=n.CesiumMath.TWO_PI+t.east-t.west;u.west=n.CesiumMath.negativePiToPi(t.west+e*a),u.east=n.CesiumMath.negativePiToPi(t.west+r*a)}const s=t.north-t.south;return u.south=t.south+a*s,u.north=t.south+o*s,1===e&&(u.west=t.east),1===r&&(u.east=t.east),1===a&&(u.south=t.north),1===o&&(u.north=t.north),u},C.MAX_VALUE=Object.freeze(new C(-Math.PI,-n.CesiumMath.PI_OVER_TWO,Math.PI,n.CesiumMath.PI_OVER_TWO)),t.Ellipsoid=o,t.Rectangle=C}));
