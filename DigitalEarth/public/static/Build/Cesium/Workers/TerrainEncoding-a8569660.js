/**
 * @license
 * Cesium - https://github.com/CesiumGS/cesium
 * Version 1.96
 *
 * Copyright 2011-2022 Cesium Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Columbus View (Pat. Pend.)
 *
 * Portions licensed separately.
 * See https://github.com/CesiumGS/cesium/blob/main/LICENSE.md for full licensing details.
 */
define(["exports","./Transforms-99c89742","./Matrix4-d3db9505","./Check-436535f3","./defined-b681f02d","./Rectangle-0610a1c7","./AttributeCompression-055d015a","./ComponentDatatype-46a1cf7a","./Math-5b6faca9","./TerrainQuantization-3ae29896"],(function(t,e,i,a,n,o,r,s,c,u){"use strict";function d(t,e){this._ellipsoid=t,this._cameraPosition=new i.Cartesian3,this._cameraPositionInScaledSpace=new i.Cartesian3,this._distanceToLimbInScaledSpaceSquared=0,n.defined(e)&&(this.cameraPosition=e)}Object.defineProperties(d.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},cameraPosition:{get:function(){return this._cameraPosition},set:function(t){const e=this._ellipsoid.transformPositionToScaledSpace(t,this._cameraPositionInScaledSpace),a=i.Cartesian3.magnitudeSquared(e)-1;i.Cartesian3.clone(t,this._cameraPosition),this._cameraPositionInScaledSpace=e,this._distanceToLimbInScaledSpaceSquared=a}}});const l=new i.Cartesian3;d.prototype.isPointVisible=function(t){return y(this._ellipsoid.transformPositionToScaledSpace(t,l),this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)},d.prototype.isScaledSpacePointVisible=function(t){return y(t,this._cameraPositionInScaledSpace,this._distanceToLimbInScaledSpaceSquared)};const m=new i.Cartesian3;d.prototype.isScaledSpacePointVisiblePossiblyUnderEllipsoid=function(t,e){const i=this._ellipsoid;let a,o;return n.defined(e)&&e<0&&i.minimumRadius>-e?(o=m,o.x=this._cameraPosition.x/(i.radii.x+e),o.y=this._cameraPosition.y/(i.radii.y+e),o.z=this._cameraPosition.z/(i.radii.z+e),a=o.x*o.x+o.y*o.y+o.z*o.z-1):(o=this._cameraPositionInScaledSpace,a=this._distanceToLimbInScaledSpaceSquared),y(t,o,a)},d.prototype.computeHorizonCullingPoint=function(t,e,i){return S(this._ellipsoid,t,e,i)};const h=o.Ellipsoid.clone(o.Ellipsoid.UNIT_SPHERE);d.prototype.computeHorizonCullingPointPossiblyUnderEllipsoid=function(t,e,i,a){return S(x(this._ellipsoid,i,h),t,e,a)},d.prototype.computeHorizonCullingPointFromVertices=function(t,e,i,a,n){return g(this._ellipsoid,t,e,i,a,n)},d.prototype.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid=function(t,e,i,a,n,o){return g(x(this._ellipsoid,n,h),t,e,i,a,o)};const f=[];d.prototype.computeHorizonCullingPointFromRectangle=function(t,a,n){const r=o.Rectangle.subsample(t,a,0,f),s=e.BoundingSphere.fromPoints(r);if(!(i.Cartesian3.magnitude(s.center)<.1*a.minimumRadius))return this.computeHorizonCullingPoint(s.center,r,n)};const p=new i.Cartesian3;function x(t,e,a){if(n.defined(e)&&e<0&&t.minimumRadius>-e){const n=i.Cartesian3.fromElements(t.radii.x+e,t.radii.y+e,t.radii.z+e,p);t=o.Ellipsoid.fromCartesian3(n,a)}return t}function S(t,e,a,o){n.defined(o)||(o=new i.Cartesian3);const r=P(t,e);let s=0;for(let e=0,i=a.length;e<i;++e){const i=z(t,a[e],r);if(i<0)return;s=Math.max(s,i)}return M(r,s,o)}const C=new i.Cartesian3;function g(t,e,a,o,r,s){n.defined(s)||(s=new i.Cartesian3),o=n.defaultValue(o,3),r=n.defaultValue(r,i.Cartesian3.ZERO);const c=P(t,e);let u=0;for(let e=0,i=a.length;e<i;e+=o){C.x=a[e]+r.x,C.y=a[e+1]+r.y,C.z=a[e+2]+r.z;const i=z(t,C,c);if(i<0)return;u=Math.max(u,i)}return M(c,u,s)}function y(t,e,a){const n=e,o=a,r=i.Cartesian3.subtract(t,n,l),s=-i.Cartesian3.dot(r,n);return!(o<0?s>0:s>o&&s*s/i.Cartesian3.magnitudeSquared(r)>o)}const T=new i.Cartesian3,N=new i.Cartesian3;function z(t,e,a){const n=t.transformPositionToScaledSpace(e,T);let o=i.Cartesian3.magnitudeSquared(n),r=Math.sqrt(o);const s=i.Cartesian3.divideByScalar(n,r,N);o=Math.max(1,o),r=Math.max(1,r);const c=1/r;return 1/(i.Cartesian3.dot(s,a)*c-i.Cartesian3.magnitude(i.Cartesian3.cross(s,a,s))*(Math.sqrt(o-1)*c))}function M(t,e,a){if(!(e<=0||e===1/0||e!=e))return i.Cartesian3.multiplyByScalar(t,e,a)}const b=new i.Cartesian3;function P(t,e){return i.Cartesian3.equals(e,i.Cartesian3.ZERO)?e:(t.transformPositionToScaledSpace(e,b),i.Cartesian3.normalize(b,b))}const _={getHeight:function(t,e,i){return(t-i)*e+i}},E=new i.Cartesian3;_.getPosition=function(t,e,a,n,o){const r=e.cartesianToCartographic(t,E),s=_.getHeight(r.height,a,n);return i.Cartesian3.fromRadians(r.longitude,r.latitude,s,e,o)};const H=new i.Cartesian3,w=new i.Cartesian3,A=new i.Cartesian2,q=new i.Matrix4,I=new i.Matrix4,V=Math.pow(2,12);function G(t,e,a,o,r,s,c,d,l,m){let h,f,p=u.TerrainQuantization.NONE;if(n.defined(e)&&n.defined(a)&&n.defined(o)&&n.defined(r)){const t=e.minimum,n=e.maximum,s=i.Cartesian3.subtract(n,t,w),c=o-a;p=Math.max(i.Cartesian3.maximumComponent(s),c)<V-1?u.TerrainQuantization.BITS12:u.TerrainQuantization.NONE,h=i.Matrix4.inverseTransformation(r,new i.Matrix4);const d=i.Cartesian3.negate(t,H);i.Matrix4.multiply(i.Matrix4.fromTranslation(d,q),h,h);const l=H;l.x=1/s.x,l.y=1/s.y,l.z=1/s.z,i.Matrix4.multiply(i.Matrix4.fromScale(l,q),h,h),f=i.Matrix4.clone(r),i.Matrix4.setTranslation(f,i.Cartesian3.ZERO,f),r=i.Matrix4.clone(r,new i.Matrix4);const m=i.Matrix4.fromTranslation(t,q),x=i.Matrix4.fromScale(s,I),S=i.Matrix4.multiply(m,x,q);i.Matrix4.multiply(r,S,r),i.Matrix4.multiply(f,S,f)}this.quantization=p,this.minimumHeight=a,this.maximumHeight=o,this.center=i.Cartesian3.clone(t),this.toScaledENU=h,this.fromScaledENU=r,this.matrix=f,this.hasVertexNormals=s,this.hasWebMercatorT=n.defaultValue(c,!1),this.hasGeodeticSurfaceNormals=n.defaultValue(d,!1),this.exaggeration=n.defaultValue(l,1),this.exaggerationRelativeHeight=n.defaultValue(m,0),this.stride=0,this._offsetGeodeticSurfaceNormal=0,this._offsetVertexNormal=0,this._calculateStrideAndOffsets()}G.prototype.encode=function(t,e,a,n,o,s,d,l){const m=n.x,h=n.y;if(this.quantization===u.TerrainQuantization.BITS12){(a=i.Matrix4.multiplyByPoint(this.toScaledENU,a,H)).x=c.CesiumMath.clamp(a.x,0,1),a.y=c.CesiumMath.clamp(a.y,0,1),a.z=c.CesiumMath.clamp(a.z,0,1);const n=this.maximumHeight-this.minimumHeight,s=c.CesiumMath.clamp((o-this.minimumHeight)/n,0,1);i.Cartesian2.fromElements(a.x,a.y,A);const u=r.AttributeCompression.compressTextureCoordinates(A);i.Cartesian2.fromElements(a.z,s,A);const l=r.AttributeCompression.compressTextureCoordinates(A);i.Cartesian2.fromElements(m,h,A);const f=r.AttributeCompression.compressTextureCoordinates(A);if(t[e++]=u,t[e++]=l,t[e++]=f,this.hasWebMercatorT){i.Cartesian2.fromElements(d,0,A);const a=r.AttributeCompression.compressTextureCoordinates(A);t[e++]=a}}else i.Cartesian3.subtract(a,this.center,H),t[e++]=H.x,t[e++]=H.y,t[e++]=H.z,t[e++]=o,t[e++]=m,t[e++]=h,this.hasWebMercatorT&&(t[e++]=d);return this.hasVertexNormals&&(t[e++]=r.AttributeCompression.octPackFloat(s)),this.hasGeodeticSurfaceNormals&&(t[e++]=l.x,t[e++]=l.y,t[e++]=l.z),e};const B=new i.Cartesian3,O=new i.Cartesian3;G.prototype.addGeodeticSurfaceNormals=function(t,e,i){if(this.hasGeodeticSurfaceNormals)return;const a=this.stride,n=t.length/a;this.hasGeodeticSurfaceNormals=!0,this._calculateStrideAndOffsets();const o=this.stride;for(let r=0;r<n;r++){for(let i=0;i<a;i++){const n=r*a+i;e[r*o+i]=t[n]}const n=this.decodePosition(e,r,B),s=i.geodeticSurfaceNormal(n,O),c=r*o+this._offsetGeodeticSurfaceNormal;e[c]=s.x,e[c+1]=s.y,e[c+2]=s.z}},G.prototype.removeGeodeticSurfaceNormals=function(t,e){if(!this.hasGeodeticSurfaceNormals)return;const i=this.stride,a=t.length/i;this.hasGeodeticSurfaceNormals=!1,this._calculateStrideAndOffsets();const n=this.stride;for(let o=0;o<a;o++)for(let a=0;a<n;a++){const r=o*i+a;e[o*n+a]=t[r]}},G.prototype.decodePosition=function(t,e,a){if(n.defined(a)||(a=new i.Cartesian3),e*=this.stride,this.quantization===u.TerrainQuantization.BITS12){const n=r.AttributeCompression.decompressTextureCoordinates(t[e],A);a.x=n.x,a.y=n.y;const o=r.AttributeCompression.decompressTextureCoordinates(t[e+1],A);return a.z=o.x,i.Matrix4.multiplyByPoint(this.fromScaledENU,a,a)}return a.x=t[e],a.y=t[e+1],a.z=t[e+2],i.Cartesian3.add(a,this.center,a)},G.prototype.getExaggeratedPosition=function(t,e,i){i=this.decodePosition(t,e,i);const a=this.exaggeration,n=this.exaggerationRelativeHeight;if(1!==a&&this.hasGeodeticSurfaceNormals){const o=this.decodeGeodeticSurfaceNormal(t,e,O),r=this.decodeHeight(t,e),s=_.getHeight(r,a,n)-r;i.x+=o.x*s,i.y+=o.y*s,i.z+=o.z*s}return i},G.prototype.decodeTextureCoordinates=function(t,e,a){return n.defined(a)||(a=new i.Cartesian2),e*=this.stride,this.quantization===u.TerrainQuantization.BITS12?r.AttributeCompression.decompressTextureCoordinates(t[e+2],a):i.Cartesian2.fromElements(t[e+4],t[e+5],a)},G.prototype.decodeHeight=function(t,e){if(e*=this.stride,this.quantization===u.TerrainQuantization.BITS12){return r.AttributeCompression.decompressTextureCoordinates(t[e+1],A).y*(this.maximumHeight-this.minimumHeight)+this.minimumHeight}return t[e+3]},G.prototype.decodeWebMercatorT=function(t,e){return e*=this.stride,this.quantization===u.TerrainQuantization.BITS12?r.AttributeCompression.decompressTextureCoordinates(t[e+3],A).x:t[e+6]},G.prototype.getOctEncodedNormal=function(t,e,a){const n=t[e=e*this.stride+this._offsetVertexNormal]/256,o=Math.floor(n),r=256*(n-o);return i.Cartesian2.fromElements(o,r,a)},G.prototype.decodeGeodeticSurfaceNormal=function(t,e,i){return e=e*this.stride+this._offsetGeodeticSurfaceNormal,i.x=t[e],i.y=t[e+1],i.z=t[e+2],i},G.prototype._calculateStrideAndOffsets=function(){let t=0;if(this.quantization===u.TerrainQuantization.BITS12)t+=3;else t+=6;this.hasWebMercatorT&&(t+=1),this.hasVertexNormals&&(this._offsetVertexNormal=t,t+=1),this.hasGeodeticSurfaceNormals&&(this._offsetGeodeticSurfaceNormal=t,t+=3),this.stride=t};const R={position3DAndHeight:0,textureCoordAndEncodedNormals:1,geodeticSurfaceNormal:2},Q={compressed0:0,compressed1:1,geodeticSurfaceNormal:2};G.prototype.getAttributes=function(t){const e=s.ComponentDatatype.FLOAT,i=s.ComponentDatatype.getSizeInBytes(e),a=this.stride*i;let n=0;const o=[];function r(r,s){o.push({index:r,vertexBuffer:t,componentDatatype:e,componentsPerAttribute:s,offsetInBytes:n,strideInBytes:a}),n+=s*i}if(this.quantization===u.TerrainQuantization.NONE){r(R.position3DAndHeight,4);let t=2;t+=this.hasWebMercatorT?1:0,t+=this.hasVertexNormals?1:0,r(R.textureCoordAndEncodedNormals,t),this.hasGeodeticSurfaceNormals&&r(R.geodeticSurfaceNormal,3)}else{const t=this.hasWebMercatorT||this.hasVertexNormals,e=this.hasWebMercatorT&&this.hasVertexNormals;r(Q.compressed0,t?4:3),e&&r(Q.compressed1,1),this.hasGeodeticSurfaceNormals&&r(Q.geodeticSurfaceNormal,3)}return o},G.prototype.getAttributeLocations=function(){return this.quantization===u.TerrainQuantization.NONE?R:Q},G.clone=function(t,e){if(n.defined(t))return n.defined(e)||(e=new G),e.quantization=t.quantization,e.minimumHeight=t.minimumHeight,e.maximumHeight=t.maximumHeight,e.center=i.Cartesian3.clone(t.center),e.toScaledENU=i.Matrix4.clone(t.toScaledENU),e.fromScaledENU=i.Matrix4.clone(t.fromScaledENU),e.matrix=i.Matrix4.clone(t.matrix),e.hasVertexNormals=t.hasVertexNormals,e.hasWebMercatorT=t.hasWebMercatorT,e.hasGeodeticSurfaceNormals=t.hasGeodeticSurfaceNormals,e.exaggeration=t.exaggeration,e.exaggerationRelativeHeight=t.exaggerationRelativeHeight,e._calculateStrideAndOffsets(),e},t.EllipsoidalOccluder=d,t.TerrainEncoding=G}));
